/*
    SELECTORES SIMPLES: Entre los cuales tenemos

    Selectores de Tipo (Selectores de etiqueta): Se les llama de etiqueta porque utilizan un tag de html. Este tipo de
    selectores se recomienda NO UTILIZARLOS

*/
body{
    background: black;
    color: green;
}

/*
    Selectores de ID: Este tipo de selectores se recomienda NO UTILIZARLOS. Los selectores de ID se indican en css con el 
    signo (#)
*/
#item1
{
    color: blue;
}

/*
    Selectores de Clase (la mejor practica): Los selectores de clase se indican en css con el signo (.)
*/

.menu-item
{
    color: green;;
}

.red
{
    color: red;
}

/*
    Especificidad: Es un algoritmo de css por el cual se resuelven los conflictos de estilos. Los selectores son:
    Selectores:         valor:
    ==========          =====
    Type                1
    Class               10
    Id                  100
    Inline              1000

*/

/* 
    Selectores Compuestos: 
    Selector Descendiente: tiene la forma:
    .ancestro descendiente
    {
        
    }
*/

ul span{ /*el espacio significa descendiente (hijo)*/
    color: red;
}

.menu-country-items
{
    color: green;
}

/*
    Selectores compuestos:
    Hijos Directos
*/
li > span{
    color: blue;
}

/* Selector Hermanos siguiente (adyacente): Selecciona el elemento siguiente*/
h1 + p{
    color: blue;
}

/* Selector Hermanos siguientes: Selecciona a todos los elementos siguientes */
h1 ~ p{
    color: red;
}

/* Combinar Selectores: para combinar selectores no debemos dejar espacio en blanco entre el elemento y la clase */
h1.parrafo1{
    color: yellow;
}

/* 
    Selectores de Atributos
    Usan corchetes [] para indicar el atributo 
*/
[href="https://www.facebook.com/"]
{
    color: white;
    font-size: 2em;
}

a[title]
{
    color: yellowgreen;
}

/* Uso de Comodin (^), este comodin significa comienza con...*/
a[title^="red"]
{
    color: blueviolet;
}

/*Uso de comodin ($), este comodin significa termina con...*/
a[href$="amazon.com"]
{
    background: url(/Css-desde-cero/clase2/cart.png) left / contain no-repeat;
    padding-left: 1.5em;
    color: aqua;
}

/* Uso de comodin (*), este comodin significa contiene
    a[href*="amazon.com"]{}
*/

/* 
    Pseudo Clases: Son selectores dinamicos que responden al contexto, a la interaccion del usuario o alguna propiedad de
    elementos. Las pseudo clases se indican en css con dos puntos (:) 
*/
a[href*="hosting"]
{
    display: inline-block;
    background: green;
    color: black;
    padding: 0 1em;
    line-height: 2.5;
    text-decoration: none;
}

a[href*="hosting"]:hover
{
    background: darkblue;
}

a[href*="hosting"]:active
{
    transform: scale(0.9);
}

/* 
    Pseudoclases de Formularios 
    :enabled | :disable
    :in-range | :out-of-range
*/
input:focus{
    background: yellow;
}

.estado:checked + label
{
    font-size: 2em;
    background: yellow;
}

form :optional{
    border: 1px solid green;
}

form :required
{
    border: 2px solid red;
}

form :valid{
    background: yellow;
}

form :invalid
{
    background: red;
}

/* Pseudoclases - Child */
p:first-child
{
    background: blue;
}

/*
p:last-child
{
    background: red;
}
*/

/*
    Buscamos el tercer hijo que sea p
    p:nth-child(3n) y cuenta de 3 en 3
    p:nth-child(3n+1) cuenta de 3 en 3 y suma 1
    p:nth-last-child(3n) empieza a contar desde el final de la lista hacia el inicio
    nota: n es un multiplicador que siempre inicia en 0 y se incremente en 1

*/
/*
p:nth-child(2)
{
    background: yellow;
    color: red;
}
*/

/* Pseudo clase Type 
    Nos busca primero el tipo. Tambien funcionan con clases
    Pseudoclase         Equivalente
    :first-child        :first-of-type
    :last-child         :last-of-type
    :nth-child()        :nth-of-type()
    :nth-last-child()   :nth-of-last-type()
*/ 
li:nth-of-type(3)
{
    background: white;
    color: balck;
}

/* Selectores Agrupados 
   Utilizamos los selectores agrupados cuando queremos aplicar estilos a mas de un elemento. Existe dos formas para resulver 
   esta necesidad. 
   1. Asignarle el mismo nombre de clase a ambos elementos. Si cada elemento ya contiene una clase distinta esta este primer
      forma no se podra aplicar.
   

*/ 
.titulo
{
    color: blue;
}
.parrafo
{
    color: green;
}

/*
    Cuando se aplican los mismos estilo en varias clases, se recomienda utilizar los selectores agrupados
*/
.titulo, 
.parrafo
{
    text-decoration: underline;
}

